# Gatekeeper Environment Configuration
# Copy this file to .env and customize the values for your environment

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL connection settings (for Agent)
PGHOST=localhost
PGPORT=5432
PGDATABASE=app
PGUSER=gatekeeper_admin
PGPASSWORD=gatekeeper_admin_password_change_in_production

# Connection pool settings
PGCONNECTIONTIMEOUT=10000
PGIDLETIMEOUT=30000
PGMAXCONNECTIONS=10

# SSL settings for production (use 'disable' for local Docker development)
PGSSLMODE=disable
# PGSSLCERT=path/to/client-cert.pem
# PGSSLKEY=path/to/client-key.pem
# PGSSLROOTCERT=path/to/ca-cert.pem

# =============================================================================
# Service Configuration  
# =============================================================================

# Control Plane HTTP server
CONTROL_PLANE_PORT=4000
CONTROL_PLANE_HOST=localhost

# Agent configuration (when running as HTTP service)
AGENT_PORT=4001
AGENT_HOST=localhost

# Agent mode: 'http' for local daemon, 'lambda' for AWS Lambda
AGENT_MODE=http

# Agent polling settings (for local HTTP mode)
AGENT_POLL_INTERVAL_MS=500
AGENT_MAX_CONCURRENT_JOBS=5

# =============================================================================
# Session Management
# =============================================================================

# Role pack version to use (determines SQL templates)
ROLEPACK_VERSION=pg-1.0.0

# Maximum TTL for sessions (in minutes)
SESSION_MAX_TTL_MINUTES=1440

# Default TTL for sessions when not specified
SESSION_DEFAULT_TTL_MINUTES=60

# Cleanup configuration
CLEANUP_INTERVAL_MINUTES=5
CLEANUP_GRACE_PERIOD_MINUTES=5

# =============================================================================
# AWS/Lambda Configuration (for LocalStack testing)
# =============================================================================

# AWS credentials for LocalStack (test/test for local development)
AWS_ACCESS_KEY_ID=test
AWS_SECRET_ACCESS_KEY=test
AWS_DEFAULT_REGION=us-east-1

# LocalStack endpoint (when using LocalStack)
LOCALSTACK_ENDPOINT=http://localhost:4566

# Lambda configuration
LAMBDA_ENDPOINT=http://localhost:4566
LAMBDA_FUNCTION_NAME=gatekeeper-agent
LAMBDA_TIMEOUT=30
LAMBDA_MEMORY=512

# =============================================================================
# Security and Authentication
# =============================================================================

# API authentication (for production)
# API_KEY_SECRET=your-secret-key-for-api-auth
# JWT_SECRET=your-jwt-secret-for-token-auth

# CORS settings
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# Logging and Observability
# =============================================================================

# Log level: 'error', 'warn', 'info', 'debug', 'trace'
LOG_LEVEL=info

# Structured logging format
LOG_FORMAT=json

# Enable request logging
LOG_REQUESTS=true

# Correlation ID header name
CORRELATION_ID_HEADER=x-correlation-id

# =============================================================================
# OpenTelemetry (optional)
# =============================================================================

# Enable OpenTelemetry tracing
OTEL_ENABLE=false

# OTLP endpoint for traces
# OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317

# Service name for tracing
OTEL_SERVICE_NAME=gatekeeper

# =============================================================================
# Development and Testing
# =============================================================================

# Node environment
NODE_ENV=development

# Enable development features
DEV_MODE=true

# Test database (for integration tests)
TEST_PGDATABASE=gatekeeper_test

# Mock external services in tests
MOCK_EXTERNAL_SERVICES=true

# =============================================================================
# LocalStack Development
# =============================================================================

# LocalStack API key (optional, for Pro features)
# LOCALSTACK_API_KEY=your-api-key

# LocalStack debug mode
DEBUG=0

# LocalStack services to start
SERVICES=lambda,logs,iam,sts

# Lambda executor type (local, docker, kubernetes)  
LAMBDA_EXECUTOR=local

# Enable persistence across restarts
PERSISTENCE=1